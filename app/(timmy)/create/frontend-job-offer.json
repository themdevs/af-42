{
	"role_title": "Frontend Engineer",
	"seniority": "mid",
	"primary_stack": ["TypeScript", "React", "Node.js", "hapi"],
	"secondary_stack": ["Wavesurfer.js", "Redux", "Inert", "Vision", "AWS S3"],
	"domain": "music streaming / artist profiles",
	"challenge_duration_hours": 4,
	"difficulty": "medium",
	"focus_areas": [
		"responsive UI/UX",
		"audio playback in browser",
		"routing",
		"server-rendered pages",
		"API data fetching",
		"state management",
		"testing"
	],
	"non_goals": ["payments", "user authentication/authorization", "real artist data ingestion", "full CI/CD setup"],
	"company_context_priority": "strict",
	"evaluation_mode": "mixed",
	"deliverable_format": "repo",
	"output_language": "en",
	"privacy_constraints": [
		"no proprietary data",
		"use only copyright-safe audio samples",
		"no secrets in repo (e.g., S3 keys)"
	],
	"inclusion_requirements": [
		"accessibility (keyboard controls, labels, contrast)",
		"basic test coverage",
		"README with setup/run/test instructions"
	],
	"prohibited_items": [
		"external paid APIs beyond listed tools",
		"scraping private content",
		"embedding credentials in source code"
	],
	"candidate_time_budget": "2-6 hours",
	"extra_credit_themes": [
		"performance optimization (lazy loading audio, memoization)",
		"observability (basic logging)",
		"security hardening (headers, input validation)"
	],
	"rubric_weights_override": {
		"correctness": 0.3,
		"code_quality": 0.25,
		"tests": 0.2,
		"ux_dx": 0.15,
		"architecture": 0.1
	},
	"derived_requirements": {
		"routes": ["GET /jane"],
		"profile_fields": ["username", "tracks[] { title, audio>=60s }"],
		"storage": "S3 or equivalent for tracks/photos",
		"player": "Wavesurfer.js or similar in-browser player",
		"server": "hapi with at least one route; Inert/Vision for server rendering"
	},
	"optional_bonus": [
		"additional artist routes (e.g., GET /john)",
		"hosted demo (Vercel/Heroku/Now or Localtunnel)",
		"linting/style with XO and Tidy",
		"tests using AVA or Intern",
		"Redux or equivalent for state"
	]
}
